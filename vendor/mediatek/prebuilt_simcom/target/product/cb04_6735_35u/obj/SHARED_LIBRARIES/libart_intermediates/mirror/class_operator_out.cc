#include <iostream>

#include "mirror/class.h"

// This was automatically generated by art/tools/generate-operator-out.py --- do not edit!
namespace art {
namespace mirror {
std::ostream& operator<<(std::ostream& os, const Class::Status& rhs) {
  switch (rhs) {
    case Class::kStatusRetired: os << "StatusRetired"; break;
    case Class::kStatusError: os << "StatusError"; break;
    case Class::kStatusNotReady: os << "StatusNotReady"; break;
    case Class::kStatusIdx: os << "StatusIdx"; break;
    case Class::kStatusLoaded: os << "StatusLoaded"; break;
    case Class::kStatusResolving: os << "StatusResolving"; break;
    case Class::kStatusResolved: os << "StatusResolved"; break;
    case Class::kStatusVerifying: os << "StatusVerifying"; break;
    case Class::kStatusRetryVerificationAtRuntime: os << "StatusRetryVerificationAtRuntime"; break;
    case Class::kStatusVerifyingAtRuntime: os << "StatusVerifyingAtRuntime"; break;
    case Class::kStatusVerified: os << "StatusVerified"; break;
    case Class::kStatusInitializing: os << "StatusInitializing"; break;
    case Class::kStatusInitialized: os << "StatusInitialized"; break;
    case Class::kStatusMax: os << "StatusMax"; break;
    default: os << "Class::Status[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace mirror
}  // namespace art

