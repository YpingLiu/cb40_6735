#include <iostream>

#include "gc/heap.h"

// This was automatically generated by art/tools/generate-operator-out.py --- do not edit!
namespace art {
namespace gc {
std::ostream& operator<<(std::ostream& os, const HomogeneousSpaceCompactResult& rhs) {
  switch (rhs) {
    case kSuccess: os << "Success"; break;
    case kErrorReject: os << "ErrorReject"; break;
    case kErrorVMShuttingDown: os << "ErrorVMShuttingDown"; break;
    default: os << "HomogeneousSpaceCompactResult[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace gc
}  // namespace art

// This was automatically generated by art/tools/generate-operator-out.py --- do not edit!
namespace art {
namespace gc {
std::ostream& operator<<(std::ostream& os, const ProcessState& rhs) {
  switch (rhs) {
    case kProcessStateJankPerceptible: os << "ProcessStateJankPerceptible"; break;
    case kProcessStateJankImperceptible: os << "ProcessStateJankImperceptible"; break;
    default: os << "ProcessState[" << static_cast<int>(rhs) << "]"; break;
  }
  return os;
}
}  // namespace gc
}  // namespace art

