/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.mediatek;

public final class R {
    public static final class anim {
    }
    public static final class array {
        public static final int bootup_mode=0x08040000;
        public static final int gprs_mode_1=0x08040001;
        public static final int gprs_mode_2=0x08040002;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int bladeIndicator=0x08010006;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bladeIndicatorHeight=0x0801000a;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int bladeIndicatorWidth=0x08010009;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disablePromptColor=0x0801000e;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disableSectionColor=0x0801000c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dotGap=0x08010015;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enablePromptColor=0x0801000d;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enableSectionColor=0x0801000b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fullSectionsId=0x08010003;
        /** for MTKAppWidgetProviderInfo 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasUsedCustomerView=0x08010011;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageDispHeight=0x08010013;
        /** for bookmarkview 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageDispWidth=0x08010012;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int imageReflection=0x08010016;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indicatorTopsId=0x08010007;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int infoColor=0x08010019;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxZoomOut=0x08010017;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int promptAnimationDuration=0x08010008;
        /**  ===============================================================
     Resource attributes proposed for MTK.
     =============================================================== 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int promptHorzOffset=0x08010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int promptVertOffset=0x08010001;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int replacedSectionsId=0x08010004;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int sectionBaselinesId=0x08010005;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int sectionFontSize=0x08010002;
        /**  for TextView SmartFit 
 Specifies whether the SmartFit is enabled or not 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smartFit=0x0801001a;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spaceBetweenItems=0x08010014;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleColor=0x08010018;
    }
    public static final class bool {
    }
    public static final class color {
        public static final int theme_slicer_backgroud_color=0x08060000;
        public static final int theme_slicer_email_item_background_read=0x08060004;
        public static final int theme_slicer_email_item_background_unread=0x08060003;
        public static final int theme_slicer_expandinglist_child_background_color=0x08060007;
        public static final int theme_slicer_focused_color=0x08060002;
        public static final int theme_slicer_mms_item_background_read=0x08060006;
        public static final int theme_slicer_mms_item_background_unread=0x08060005;
        public static final int theme_slicer_pressed_color=0x08060001;
    }
    public static final class dimen {
    }
    public static final class drawable {
        /**  Default Account selection 
         */
        public static final int account_always_ask_icon=0x08020003;
        public static final int ic_clock=0x08020001;
        public static final int ic_dialog_menu_generic=0x08020002;
        public static final int other_accounts_icon=0x08020004;
        public static final int wfc_notify_ongoing_call=0x08020006;
        public static final int wfc_notify_registration_error=0x08020007;
        /**  WFC 
         */
        public static final int wfc_notify_registration_success=0x08020005;
    }
    public static final class id {
    }
    public static final class integer {
    }
    public static final class interpolator {
    }
    public static final class layout {
    }
    public static final class plurals {
    }
    public static final class raw {
        public static final int gemini_sac=0x08030000;
    }
    public static final class string {
        /**  Displayed to tell the user that the network reject cause. 
         */
        public static final int MMRejectCause13=0x08050075;
        /**  Displayed to tell the user that the network reject cause. 
         */
        public static final int MMRejectCause2=0x08050068;
        /**  Displayed to tell the user that the network reject cause. 
         */
        public static final int MMRejectCause3=0x08050069;
        /**  Displayed to tell the user that the network reject cause. 
         */
        public static final int MMRejectCause5=0x08050070;
        /**  Displayed to tell the user that the network reject cause. 
         */
        public static final int MMRejectCause6=0x08050071;
        public static final int Pin2Mmi=0x08050009;
        public static final int Puk2Mmi=0x0805000b;
        public static final int PukMmi=0x0805000a;
        /**  Displayed to tell the user that the network reject cause. 
         */
        public static final int RejectCauseTitle=0x08050067;
        /**  For WPS/P2P NFC start 
 For WPS/P2P NFC end 
 for notification when using some spcial icc card 
 for notification when using some spcial icc card 
         */
        public static final int Special_Card_Type_Title_Lte_Not_Available=0x08050097;
        public static final int Suggest_To_Change_USIM=0x08050098;
        public static final int VideoView_error_text_bad_file=0x08050057;
        public static final int VideoView_error_text_cannot_connect_to_server=0x08050058;
        public static final int VideoView_error_text_drm_not_supported=0x0805005a;
        public static final int VideoView_error_text_type_not_supported=0x08050059;
        public static final int account_always_ask_title=0x0805009a;
        /**  MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
 MTK new add Strings 
         */
        public static final int badPin2=0x08050001;
        public static final int badPuk2=0x08050002;
        /**  Displayed to prompt the user action fail by Call Barring
         */
        public static final int callBarringFailMmi=0x08050008;
        public static final int cfServiceNotForwarded=0x0805000e;
        /**  Displayed when a SIM PIN PUK password is too long or too short. 
         */
        public static final int checkPwdLen=0x08050003;
        /**  LockScreen 
 Contacts Widget 
 Contacts Widget 
         */
        public static final int contact_widget_loading=0x08050050;
        /**  HDMI end 
 VolumePanel 
 For CS domain network not registered, PS is registered scenario 
 VolumePanel 
 For CS domain network not registered, PS is registered scenario 
 VolumePanel 
 For CS domain network not registered, PS is registered scenario 
         */
        public static final int data_conn_only=0x08050093;
        public static final int drm_protectioninfo_title=0x08050062;
        /**  Displayed to prompt the user action fail by FDN
         */
        public static final int fdnFailMmi=0x08050007;
        /**  Text of the alert that is displayed when an application has crashed. 
 Text of the alert that is displayed when an application has crashed. 
 Text of the alert that is displayed when an application has crashed. 
         */
        public static final int free_memory_btn=0x08050047;
        public static final int internal_error_notification_summary=0x0805010a;
        public static final int internal_error_notification_title=0x08050106;
        public static final int invalidPuk=0x08050015;
        /**  Shown when the phone does not download calibration data 
 Displayed to tell the user that the SIM is IMEI locked. 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 Shown when the phone does not download calibration data 
 Shown when the phone does not download calibration data 
         */
        public static final int invalid_card=0x08050066;
        /**  Add by MTK:Check IMEI information 
         */
        public static final int invalid_imei=0x0805001b;
        /**  Title of the dialog where the user is adjusting the audio volume fm 
 Title of the dialog where the user is adjusting the audio volume matv 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
 add new style for mtk streaming video player start 
         */
        public static final int media_controller_buffering=0x0805004f;
        public static final int media_controller_connecting=0x08050055;
        public static final int media_controller_live=0x08050053;
        public static final int media_controller_playing=0x08050054;
        public static final int network_error_notification_title=0x08050107;
        /**  For Networklist add CU String forbidden 
 For Networklist add CU String forbidden 
 For Networklist add CU String forbidden 
         */
        public static final int network_forbidden=0x08050099;
        public static final int ongoing_call_notification_title=0x08050108;
        /**  Add by MTK:Operator name mapping table, long name 
 Operator name mapping table 
 Operator name mapping table 
         */
        public static final int oper_long_46000=0x0805001d;
        public static final int oper_long_46001=0x0805001e;
        public static final int oper_long_46003=0x08050063;
        public static final int oper_long_46601=0x0805001f;
        public static final int oper_long_46692=0x08050020;
        public static final int oper_long_46697=0x08050021;
        public static final int oper_long_99998=0x08050022;
        public static final int oper_long_99999=0x08050023;
        /**  Add by MTK:Operator name mapping table, short name 
         */
        public static final int oper_short_46000=0x08050024;
        public static final int oper_short_46001=0x08050025;
        public static final int oper_short_46003=0x08050064;
        public static final int oper_short_46601=0x08050026;
        public static final int oper_short_46692=0x08050027;
        public static final int oper_short_46697=0x08050028;
        public static final int oper_short_99997=0x08050029;
        public static final int oper_short_99999=0x0805002a;
        /**  Displayed to prompt the user to enable PIN before change it. 
         */
        public static final int pinNotEnabled=0x08050004;
        /**  Displayed to prompt the user PUK1 is blocked 
         */
        public static final int puk1Blocked=0x08050005;
        /**  Displayed to prompt the user PUK2 is blocked 
         */
        public static final int puk2Blocked=0x08050006;
        public static final int same_imei=0x0805001c;
        public static final int sdcard_default_path_change=0x08050079;
        /**  MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 MountService start 
 Add for AT&T to show toast when pass pin/puk lock 
 MountService start 
 MountService start 
         */
        public static final int sdcard_ready_title=0x08050077;
        public static final int sdcard_select_default_path=0x08050078;
        /**  Meaning: unknown.  Example: Service was enabled for: Voice, PAD 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
 MountService end 
         */
        public static final int serviceClassVideo=0x08050044;
        /**  Displayed to tell the user that caller ID is provisioned for their SIM. 
         */
        public static final int serviceProvisioned=0x0805000c;
        /**  Displayed to tell the user that provisioned status unknown 
         */
        public static final int serviceUnknown=0x0805000d;
        /**  activity thread used string 
 Instructions telling the user to enter their pin to unlock the keyguard.
         Displayed in one line in a large font.  
 Add by MTK:Restricted Change Notification for Gemini 
 Instructions telling the user to enter their pin to unlock the keyguard.
         Displayed in one line in a large font.  
 When the user enters a wrong sim pin too many times, it becomes
         PUK locked (Pin Unlock Kode) 
 When the user enters a wrong sim pin too many times, it becomes
         PUK locked (Pin Unlock Kode) 
         */
        public static final int sim_close=0x08050038;
        public static final int success_notification_summary=0x08050109;
        /** @}
 WFC 
         */
        public static final int success_notification_title=0x08050105;
        public static final int usb_storage_ready_title=0x08050083;
        public static final int wfc_403_auth_scheme_unsupported=0x08050121;
        public static final int wfc_403_handset_blacklisted=0x08050122;
        public static final int wfc_403_mismatch_identities=0x08050120;
        public static final int wfc_403_roaming_not_allowed=0x0805011f;
        public static final int wfc_403_unknown_user=0x0805011e;
        public static final int wfc_911_missing=0x08050123;
        public static final int wfc_any_other_conn_error=0x08050119;
        public static final int wfc_dns_recv_naptr_query_rsp_error=0x0805010f;
        public static final int wfc_dns_recv_rsp_query_error=0x08050111;
        public static final int wfc_dns_recv_rsp_srv_query_error=0x08050110;
        public static final int wfc_dns_resolve_fqdn_error=0x08050112;
        public static final int wfc_epdg_con_or_local_or_null_ptr_error=0x08050115;
        public static final int wfc_epdg_ipsec_setup_error=0x08050116;
        public static final int wfc_incorrect_sim_card_error=0x08050113;
        public static final int wfc_internal_server_error=0x08050118;
        public static final int wfc_local_or_null_ptr_error=0x08050114;
        public static final int wfc_off=0x0805010c;
        public static final int wfc_on=0x0805010b;
        public static final int wfc_rns_allowed_radio_deny=0x0805010d;
        public static final int wfc_rns_allowed_radio_none=0x0805010e;
        public static final int wfc_server_cert_invalid_error=0x0805011d;
        public static final int wfc_server_cert_validation_error=0x0805011a;
        public static final int wfc_server_ipsec_cert_invalid_error=0x0805011c;
        public static final int wfc_server_ipsec_cert_validation_error=0x0805011b;
        public static final int wfc_tls_conn_error=0x08050117;
        /**  voice ui end 
 Content of a dialog to turn off BT and HDMI when WFD on. 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice ui start 
 voice ui end 
 Cell conn service string [END] 
 voice unlock start 
 voice unlock end 
 voice unlock start 
 voice unlock end 
 voice ui end 
         */
        public static final int wifi_display_bt_hdmi_off_wfd_on=0x08050073;
        /**  Content of a dialog to notify user current connection is building 
         */
        public static final int wifi_display_build_connection=0x08050096;
        /**  Content of a dialog to notify user change resolution will reconnect wireless display 
         */
        public static final int wifi_display_change_resolution_reminder=0x08050090;
        /**  Content of a notification to notify user channel confliction 
         */
        public static final int wifi_display_channel_confliction=0x08050103;
        /**  Content of a dialog to notify user to confirm if he accepts connection from other devices 
         */
        public static final int wifi_display_confirm_connection=0x08050095;
        /**  Content of a toast to notify user connected to a new Wi-Fi network 
         */
        public static final int wifi_display_connected_to_wifi_network=0x08050100;
        /**  Content of a toast to notify user connection is not steady 
         */
        public static final int wifi_display_connection_is_not_steady=0x08050081;
        /**  Content of a dialog to disconnect then connect. 
         */
        public static final int wifi_display_disconnect_then_reconnect=0x08050085;
        /**  Content of a toast to notify disconnected. 
         */
        public static final int wifi_display_disconnected=0x08050086;
        /**  Content in a dialog to ask user if do not remind again 
         */
        public static final int wifi_display_do_not_remind_again=0x08050091;
        /**  Title of a dialog to reconnect. 
         */
        public static final int wifi_display_reconnect=0x08050084;
        /**  Content of a dialog to notify user multimedia sound will not play from headset 
         */
        public static final int wifi_display_sound_path_reminder=0x08050089;
        /**  Title of a notification to notify user WIFI display connection is unstable  
         */
        public static final int wifi_display_unstable_connection=0x08050080;
        /**  Content of a notification to suggest user to get closer to the display device 
         */
        public static final int wifi_display_unstable_suggestion=0x08050082;
        /**  Content of a dialog to notify user WiFi Display is waiting for connection from other devices 
         */
        public static final int wifi_display_wait_connection=0x08050094;
        /**  Content of a toast to notify user wifi display and wifi are turned on 
         */
        public static final int wifi_display_wfd_and_wifi_are_turned_on=0x08050088;
        /**  Content of a dialog to turn off WFD when HDMI on. 
         */
        public static final int wifi_display_wfd_off_hdmi_on=0x08050074;
        /**  Content of a toast to notify user currenty Wi-Fi AP may affect the quality of wireless display 
         */
        public static final int wifi_display_wifi_ap_affects_quality=0x08050092;
        /**  Content of a notification to notify user WiFi network can't coexist with cast screen connection 
         */
        public static final int wifi_display_wifi_network_cannot_coexist=0x08050104;
        /**  Content of a toast to notify user the current Wi-Fi network is disconnected 
         */
        public static final int wifi_display_wifi_network_disconnected=0x08050102;
        /**  Content of a dialog to turn off WFD when BT on. 
 Content of a dialog to disconnect previous Wi-Fi direct connection when WFD is connected. 
         */
        public static final int wifi_display_wifi_p2p_disconnect_wfd_connect=0x08050076;
        /**  Text displayed for channel conflict enhance [CHAR LIMIT=150] 
         */
        public static final int wifi_p2p_frequency_conflict_message=0x08050101;
        /**  Text displayed when WPS fails due to another session [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_overlap=0x08050087;
    }
    public static final class style {
        /**  Long string feature for ImageSwitch 
 Long string feature for ImageSwitch 
         */
        public static final int ImageSwitch=0x080f0000;
    }
    public static final class xml {
    }
    /** @doconly */
    public static final class styleable {
        /**  Used for BladeView, add by wt. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BladeView_bladeIndicator com.mediatek:bladeIndicator}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_bladeIndicatorHeight com.mediatek:bladeIndicatorHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_bladeIndicatorWidth com.mediatek:bladeIndicatorWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_disablePromptColor com.mediatek:disablePromptColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_disableSectionColor com.mediatek:disableSectionColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_enablePromptColor com.mediatek:enablePromptColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_enableSectionColor com.mediatek:enableSectionColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_fullSectionsId com.mediatek:fullSectionsId}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_indicatorTopsId com.mediatek:indicatorTopsId}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_promptAnimationDuration com.mediatek:promptAnimationDuration}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_promptHorzOffset com.mediatek:promptHorzOffset}</code></td><td> ===============================================================
     Resource attributes proposed for MTK.</td></tr>
           <tr><td><code>{@link #BladeView_promptVertOffset com.mediatek:promptVertOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_replacedSectionsId com.mediatek:replacedSectionsId}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_sectionBaselinesId com.mediatek:sectionBaselinesId}</code></td><td></td></tr>
           <tr><td><code>{@link #BladeView_sectionFontSize com.mediatek:sectionFontSize}</code></td><td></td></tr>
           </table>
           @see #BladeView_bladeIndicator
           @see #BladeView_bladeIndicatorHeight
           @see #BladeView_bladeIndicatorWidth
           @see #BladeView_disablePromptColor
           @see #BladeView_disableSectionColor
           @see #BladeView_enablePromptColor
           @see #BladeView_enableSectionColor
           @see #BladeView_fullSectionsId
           @see #BladeView_indicatorTopsId
           @see #BladeView_promptAnimationDuration
           @see #BladeView_promptHorzOffset
           @see #BladeView_promptVertOffset
           @see #BladeView_replacedSectionsId
           @see #BladeView_sectionBaselinesId
           @see #BladeView_sectionFontSize
         */
        public static final int[] BladeView = {
            0x08010000, 0x08010001, 0x08010002, 0x08010003,
            0x08010004, 0x08010005, 0x08010006, 0x08010007,
            0x08010008, 0x08010009, 0x0801000a, 0x0801000b,
            0x0801000c, 0x0801000d, 0x0801000e
        };
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#bladeIndicator}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.mediatek:bladeIndicator
        */
        public static final int BladeView_bladeIndicator = 6;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#bladeIndicatorHeight}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:bladeIndicatorHeight
        */
        public static final int BladeView_bladeIndicatorHeight = 10;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#bladeIndicatorWidth}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:bladeIndicatorWidth
        */
        public static final int BladeView_bladeIndicatorWidth = 9;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#disablePromptColor}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:disablePromptColor
        */
        public static final int BladeView_disablePromptColor = 14;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#disableSectionColor}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:disableSectionColor
        */
        public static final int BladeView_disableSectionColor = 12;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#enablePromptColor}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:enablePromptColor
        */
        public static final int BladeView_enablePromptColor = 13;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#enableSectionColor}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:enableSectionColor
        */
        public static final int BladeView_enableSectionColor = 11;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#fullSectionsId}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.mediatek:fullSectionsId
        */
        public static final int BladeView_fullSectionsId = 3;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#indicatorTopsId}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.mediatek:indicatorTopsId
        */
        public static final int BladeView_indicatorTopsId = 7;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#promptAnimationDuration}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:promptAnimationDuration
        */
        public static final int BladeView_promptAnimationDuration = 8;
        /**
          <p>
          @attr description
           ===============================================================
     Resource attributes proposed for MTK.
     =============================================================== 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute
          resource symbol {@link com.mediatek.R.attr#promptHorzOffset}.
          @attr name com.mediatek:promptHorzOffset
        */
        public static final int BladeView_promptHorzOffset = 0;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#promptVertOffset}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:promptVertOffset
        */
        public static final int BladeView_promptVertOffset = 1;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#replacedSectionsId}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.mediatek:replacedSectionsId
        */
        public static final int BladeView_replacedSectionsId = 4;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#sectionBaselinesId}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.mediatek:sectionBaselinesId
        */
        public static final int BladeView_sectionBaselinesId = 5;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#sectionFontSize}
          attribute's value can be found in the {@link #BladeView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:sectionFontSize
        */
        public static final int BladeView_sectionFontSize = 2;
        /**  Used for Bookmark, add by wt. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BookmarkView_dotGap com.mediatek:dotGap}</code></td><td></td></tr>
           <tr><td><code>{@link #BookmarkView_imageDispHeight com.mediatek:imageDispHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #BookmarkView_imageDispWidth com.mediatek:imageDispWidth}</code></td><td>for bookmarkview </td></tr>
           <tr><td><code>{@link #BookmarkView_imageReflection com.mediatek:imageReflection}</code></td><td></td></tr>
           <tr><td><code>{@link #BookmarkView_infoColor com.mediatek:infoColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BookmarkView_maxZoomOut com.mediatek:maxZoomOut}</code></td><td></td></tr>
           <tr><td><code>{@link #BookmarkView_spaceBetweenItems com.mediatek:spaceBetweenItems}</code></td><td></td></tr>
           <tr><td><code>{@link #BookmarkView_titleColor com.mediatek:titleColor}</code></td><td></td></tr>
           </table>
           @see #BookmarkView_dotGap
           @see #BookmarkView_imageDispHeight
           @see #BookmarkView_imageDispWidth
           @see #BookmarkView_imageReflection
           @see #BookmarkView_infoColor
           @see #BookmarkView_maxZoomOut
           @see #BookmarkView_spaceBetweenItems
           @see #BookmarkView_titleColor
         */
        public static final int[] BookmarkView = {
            0x08010012, 0x08010013, 0x08010014, 0x08010015,
            0x08010016, 0x08010017, 0x08010018, 0x08010019
        };
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#dotGap}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:dotGap
        */
        public static final int BookmarkView_dotGap = 3;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#imageDispHeight}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:imageDispHeight
        */
        public static final int BookmarkView_imageDispHeight = 1;
        /**
          <p>
          @attr description
          for bookmarkview 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute
          resource symbol {@link com.mediatek.R.attr#imageDispWidth}.
          @attr name com.mediatek:imageDispWidth
        */
        public static final int BookmarkView_imageDispWidth = 0;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#imageReflection}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:imageReflection
        */
        public static final int BookmarkView_imageReflection = 4;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#infoColor}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:infoColor
        */
        public static final int BookmarkView_infoColor = 7;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#maxZoomOut}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:maxZoomOut
        */
        public static final int BookmarkView_maxZoomOut = 5;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#spaceBetweenItems}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:spaceBetweenItems
        */
        public static final int BookmarkView_spaceBetweenItems = 2;
        /**
          <p>This symbol is the offset where the {@link com.mediatek.R.attr#titleColor}
          attribute's value can be found in the {@link #BookmarkView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.mediatek:titleColor
        */
        public static final int BookmarkView_titleColor = 6;
        /**  View Animation start 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           </table>
         */
        public static final int[] DecelerateInterpolatorEx = {
            0x08100000, 0x08100001
        };
        /** Attributes that can be used with a ImageSwitch.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ImageSwitch_android_switchMinWidth android:switchMinWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #ImageSwitch_android_textOff android:textOff}</code></td><td></td></tr>
           <tr><td><code>{@link #ImageSwitch_android_textOn android:textOn}</code></td><td></td></tr>
           <tr><td><code>{@link #ImageSwitch_android_thumb android:thumb}</code></td><td></td></tr>
           <tr><td><code>{@link #ImageSwitch_android_thumbTextPadding android:thumbTextPadding}</code></td><td></td></tr>
           </table>
           @see #ImageSwitch_android_switchMinWidth
           @see #ImageSwitch_android_textOff
           @see #ImageSwitch_android_textOn
           @see #ImageSwitch_android_thumb
           @see #ImageSwitch_android_thumbTextPadding
         */
        public static final int[] ImageSwitch = {
            0x01010124, 0x01010125, 0x01010142, 0x01010370,
            0x01010372
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#switchMinWidth}
          attribute's value can be found in the {@link #ImageSwitch} array.
          @attr name android:switchMinWidth
        */
        public static final int ImageSwitch_android_switchMinWidth = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textOff}
          attribute's value can be found in the {@link #ImageSwitch} array.
          @attr name android:textOff
        */
        public static final int ImageSwitch_android_textOff = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textOn}
          attribute's value can be found in the {@link #ImageSwitch} array.
          @attr name android:textOn
        */
        public static final int ImageSwitch_android_textOn = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#thumb}
          attribute's value can be found in the {@link #ImageSwitch} array.
          @attr name android:thumb
        */
        public static final int ImageSwitch_android_thumb = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#thumbTextPadding}
          attribute's value can be found in the {@link #ImageSwitch} array.
          @attr name android:thumbTextPadding
        */
        public static final int ImageSwitch_android_thumbTextPadding = 4;
        /** Attributes that can be used with a MTKAppWidgetProviderInfo.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MTKAppWidgetProviderInfo_hasUsedCustomerView com.mediatek:hasUsedCustomerView}</code></td><td>for MTKAppWidgetProviderInfo </td></tr>
           </table>
           @see #MTKAppWidgetProviderInfo_hasUsedCustomerView
         */
        public static final int[] MTKAppWidgetProviderInfo = {
            0x08010011
        };
        /**
          <p>
          @attr description
          for MTKAppWidgetProviderInfo 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute
          resource symbol {@link com.mediatek.R.attr#hasUsedCustomerView}.
          @attr name com.mediatek:hasUsedCustomerView
        */
        public static final int MTKAppWidgetProviderInfo_hasUsedCustomerView = 0;
        /**  View Animation end 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextView_smartFit com.mediatek:smartFit}</code></td><td> Specifies whether the SmartFit is enabled or not </td></tr>
           </table>
           @see #TextView_smartFit
         */
        public static final int[] TextView = {
            0x0801001a
        };
        /**
          <p>
          @attr description
           Specifies whether the SmartFit is enabled or not 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This corresponds to the global attribute
          resource symbol {@link com.mediatek.R.attr#smartFit}.
          @attr name com.mediatek:smartFit
        */
        public static final int TextView_smartFit = 0;
    };
}
